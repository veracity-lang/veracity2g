commutativity{
    {f1(i,ctr,amt)}, {f2(ctr)}: (i % 2 == 0 && (ctr > 0 && amt > 0 || ctr <= 0 && amt <
-ctr))
}

int main(int argc, string[] argv) {
    int i = int_of_string(argv[1]);
    int ctr = int_of_string(argv[2]);
    int amt = 2;
    int n = i;

    f1(i,ctr,amt):{
        /* this only works if i is initially even. */
        while(i>0) { 
            if(i%2 == 0) {
                amt = amt * -1;
            } else {
                amt = amt * i * -1;
            }
            i = i - 2;
        }
        mutex_lock(0); ctr = ctr + amt; mutex_unlock(0); 
        
    }
    f2(ctr):{   
        mutex_lock(0); if (ctr > 0) { ctr = ctr - 1; } mutex_unlock(0); busy_wait(n);
    }
    
    
    return 0;
}
