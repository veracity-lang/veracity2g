commutativity{
	{f1(y)},{f2(y)}: (y == 0)
}
int main(int argc, string[] argv) {
	int n = int_of_string(argv[1]);
	int x = int_of_string(argv[2]);
	int z = int_of_string(argv[3]);
	int w = int_of_string(argv[4]);
	int y = int_of_string(argv[5]);
	int t = 0;
	int u = 0;
	int o = 0;
	int r = random(0, 100);
	/*mutex_init(1);*/
	/* to parallelize the busy's, need commutativity
	   to know the order can be swapped */

	f1(y):{ 
		t = r; /* t = */ busy_wait(n);
		mutex_lock(1);
		z = z * t;
		y = 2 * y;
		x = x + y; 
		mutex_unlock(1); 
	}
	f2(y):{ 
		mutex_lock(1);
		z = 3 * z;
		x = x + y; 
		u = x; 
		mutex_unlock(1); 
		busy_wait(n); o = u /* busy_wait(n, u) */; }
	
	
	return 0;
}
